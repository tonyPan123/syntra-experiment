; benchmark generated from python API
(set-info :status unknown)
(declare-fun S_4 () Real)
(declare-fun L_0 () Real)
(declare-fun A_0 () Real)
(declare-fun A_1 () Real)
(declare-fun A_5 () Real)
(declare-fun loss_rate_tol () Real)
(declare-fun A_4 () Real)
(declare-fun A_3 () Real)
(declare-fun A_2 () Real)
(declare-fun S_3 () Real)
(declare-fun S_2 () Real)
(declare-fun S_1 () Real)
(declare-fun S_0 () Real)
(declare-fun a () Real)
(assert
 (exists ((I_0 Real) (I_1 Real) (I_2 Real) (I_3 Real) (I_4 Real) (I_5 Real) (L_1 Real) (L_2 Real) (L_3 Real) (L_4 Real) (L_5 Real) (C Real) (B Real) (S_5 Real) )(let ((?x40 (- A_0 L_0)))
 (let (($x148 (<= ?x40 S_4)))
 (let (($x181 (and (<= (- L_5 L_4) loss_rate_tol) (<= (- (- A_5 L_5) I_5) (* C 3.0)))))
 (let (($x146 (>= A_5 A_4)))
 (let (($x145 (>= A_4 A_3)))
 (let (($x144 (>= A_3 A_2)))
 (let (($x143 (>= A_2 A_1)))
 (let (($x142 (>= A_1 A_0)))
 (let (($x137 (>= S_4 S_3)))
 (let (($x134 (>= S_3 S_2)))
 (let (($x131 (>= S_2 S_1)))
 (let (($x128 (>= S_1 S_0)))
 (let ((?x176 (- A_5 L_5)))
 (let ((?x195 (* C 1.0)))
 (let ((?x198 (+ I_4 ?x195)))
 (let (($x206 (= I_4 (ite (< (+ I_3 ?x195) (- A_4 L_4)) (+ I_3 ?x195) (- A_4 L_4)))))
 (let (($x211 (= I_3 (ite (< (+ I_2 ?x195) (- A_3 L_3)) (+ I_2 ?x195) (- A_3 L_3)))))
 (let (($x216 (= I_2 (ite (< (+ I_1 ?x195) (- A_2 L_2)) (+ I_1 ?x195) (- A_2 L_2)))))
 (let (($x220 (= I_1 (ite (< (+ I_0 ?x195) (- A_1 L_1)) (+ I_0 ?x195) (- A_1 L_1)))))
 (let (($x221 (= L_5 L_4)))
 (let (($x226 (=> (not (> (- (- A_5 L_4) I_5) B)) $x221)))
 (let (($x224 (> (- (- A_5 L_4) I_5) B)))
 (let (($x230 (=> $x224 (= L_5 (- (- A_5 I_5) B)))))
 (let (($x231 (= L_4 L_3)))
 (let (($x236 (=> (not (> (- (- A_4 L_3) I_4) B)) $x231)))
 (let (($x234 (> (- (- A_4 L_3) I_4) B)))
 (let (($x240 (=> $x234 (= L_4 (- (- A_4 I_4) B)))))
 (let (($x241 (= L_3 L_2)))
 (let (($x246 (=> (not (> (- (- A_3 L_2) I_3) B)) $x241)))
 (let (($x244 (> (- (- A_3 L_2) I_3) B)))
 (let (($x250 (=> $x244 (= L_3 (- (- A_3 I_3) B)))))
 (let (($x251 (= L_2 L_1)))
 (let (($x256 (=> (not (> (- (- A_2 L_1) I_2) B)) $x251)))
 (let (($x254 (> (- (- A_2 L_1) I_2) B)))
 (let (($x260 (=> $x254 (= L_2 (- (- A_2 I_2) B)))))
 (let (($x261 (= L_1 L_0)))
 (let (($x265 (=> (not (> (- (- A_1 L_0) I_1) B)) $x261)))
 (let (($x263 (> (- (- A_1 L_0) I_1) B)))
 (let (($x269 (=> $x263 (= L_1 (- (- A_1 I_1) B)))))
 (let (($x47 (= a 1.0)))
 (let (($x39 (>= L_0 0.0)))
 (and $x39 (<= I_0 ?x40) (>= C (* 5.0 a)) (>= B (* 5.0 a)) $x47 $x269 $x265 $x260 $x256 $x250 $x246 $x240 $x236 $x230 $x226 $x269 $x265 $x260 $x256 $x250 $x246 $x240 $x236 $x230 $x226 $x220 $x216 $x211 $x206 (= I_5 (ite (< ?x198 ?x176) ?x198 ?x176)) (>= S_0 (- I_0 ?x195)) (<= S_0 I_0) (>= S_1 I_0) $x128 (<= S_1 I_1) (>= S_2 I_1) $x131 (<= S_2 I_2) (>= S_3 I_2) $x134 (<= S_3 I_3) (>= S_4 I_3) $x137 (<= S_4 I_4) (>= S_5 I_4) (>= S_5 S_4) (<= S_5 I_5) $x142 $x143 $x144 $x145 $x146 (not $x181) (> (- A_1 L_1) S_4) $x148)))))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)

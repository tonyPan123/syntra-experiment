; benchmark generated from python API
(set-info :status unknown)
(declare-fun S_1 () Real)
(declare-fun S_2 () Real)
(declare-fun C () Real)
(declare-fun A_3 () Real)
(declare-fun L_2 () Real)
(declare-fun L_1 () Real)
(declare-fun A_1 () Real)
(declare-fun L_0 () Real)
(declare-fun A_0 () Real)
(declare-fun S_0 () Real)
(declare-fun A_2 () Real)
(declare-fun S_3 () Real)
(declare-fun L_4 () Real)
(declare-fun A_4 () Real)
(declare-fun S_4 () Real)
(declare-fun B () Real)
(assert
 (let (($x3605 (<= (+ (* (- 1.0) L_2) A_3 (* (- 3.0) C) (* (- 1.0) S_1)) 0.0)))
 (let (($x3602 (<= (+ (* (- 1.0) L_2) A_3 (* (- 2.0) C) (* (- 1.0) S_2)) 0.0)))
 (let (($x3577 (<= (+ (* (- 1.0) L_2) A_3 (* (- 1.0) A_1) (* (- 2.0) C) L_1) 0.0)))
 (let (($x34 (>= L_0 0.0)))
 (let (($x789 (>= C 5.0)))
 (let (($x619 (>= B 5.0)))
 (let (($x3587 (<= (+ (* (- 1.0) L_2) A_3 (* (- 4.0) C) (* (- 1.0) S_0)) 0.0)))
 (let (($x3584 (<= (+ (* (- 1.0) L_2) A_3 (* (- 1.0) A_0) (* (- 3.0) C) L_0) 0.0)))
 (let ((?x368 (* (- 1.0) A_4)))
 (let ((?x1028 (+ A_3 ?x368 C B)))
 (let (($x455 (<= 0.0 ?x1028)))
 (let (($x461 (= L_4 L_2)))
 (let (($x488 (not $x461)))
 (let (($x51 (= L_1 L_0)))
 (let (($x1355 (not $x51)))
 (let (($x61 (= L_2 L_1)))
 (let (($x3779 (or $x61 $x1355 (<= (+ (* (- 1.0) A_2) A_1 C L_2 (* (- 1.0) L_0)) 0.0))))
 (let ((?x224 (* (- 1.0) B)))
 (let ((?x250 (* (- 1.0) L_2)))
 (let ((?x1018 (* (- 1.0) S_0)))
 (let ((?x1574 (* (- 3.0) C)))
 (let (($x3536 (<= 0.0 (+ A_2 (* (- 1.0) A_1) (* (- 1.0) C) L_1 ?x250 ?x224))))
 (let (($x2042 (= (+ (* (- 1.0) A_2) A_1 C (* (- 1.0) L_1) L_2 B) 0.0)))
 (let (($x3556 (or $x61 $x3536 (<= (+ (* (- 1.0) A_2) (* 2.0 C) S_0 L_2 B) 0.0))))
 (let (($x1896 (<= (+ A_2 (* (- 1.0) A_0) (* (- 2.0) C) ?x250 ?x224 L_0) 0.0)))
 (let (($x1972 (<= (+ A_1 (* (- 1.0) S_2) (* (- 1.0) L_1)) 0.0)))
 (let (($x3769 (or $x51 (<= (+ (* (- 1.0) A_1) (* (- 1.0) C) S_2 L_1 B) 0.0))))
 (let (($x4564 (or $x51 $x61 (= (+ (* (- 1.0) A_2) A_1 C (* (- 1.0) L_1) L_2) 0.0))))
 (let (($x3508 (<= (+ ?x250 A_3 (* (- 1.0) A_1) (* (- 2.0) C) L_1 B) 0.0)))
 (let (($x1015 (<= (+ A_1 (* (- 1.0) C) (* (- 1.0) S_1) (* (- 1.0) L_1) ?x224) 0.0)))
 (let ((?x233 (* (- 1.0) L_1)))
 (let ((?x291 (* (- 1.0) C)))
 (let ((?x1044 (* (- 1.0) A_0)))
 (let (($x1009 (<= (+ A_1 (* (- 1.0) S_2) ?x233 ?x224) 0.0)))
 (let (($x117 (>= S_4 S_3)))
 (let (($x108 (>= S_1 S_0)))
 (let (($x111 (>= S_2 S_1)))
 (let (($x119 (>= A_1 A_0)))
 (let (($x120 (>= A_2 A_1)))
 (let (($x121 (>= A_3 A_2)))
 (and (<= (+ A_3 ?x250) S_3) $x121 $x120 $x119 $x111 $x108 $x117 (or (not (<= 0.0 (+ ?x233 L_0))) $x51) $x1009 (<= (+ A_1 ?x1044 ?x291 ?x233 ?x224 L_0) 0.0) (<= (+ A_1 (* (- 2.0) C) ?x1018 ?x233 ?x224) 0.0) $x1015 (or $x51 (<= (+ (* (- 1.0) A_1) S_1 L_1 B) 0.0)) (or $x51 (<= (+ (* (- 1.0) A_1) C S_0 L_1 B) 0.0)) (or (not $x455) $x461) (or (= (+ ?x250 A_3 ?x368 C L_4 B) 0.0) $x461) (or $x51 $x3508) $x4564 (or (not $x61) $x51 (<= 0.0 (+ (* (- 1.0) A_2) A_1 C))) $x3769 (<= (+ L_2 (* (- 1.0) A_3) S_4 ?x291) 0.0) (or $x61 (<= (+ (* (- 1.0) A_2) S_2 L_2 B) 0.0)) (or $x61 (<= (+ A_3 (* (- 1.0) A_2) ?x291 B) 0.0)) (or $x61 (<= (+ (* (- 1.0) A_2) C S_1 L_2 B) 0.0)) (or $x61 (not (<= 0.0 (+ L_1 ?x250)))) (or (<= (+ C (* (- 1.0) S_2) S_0) 0.0) $x1972) $x1896 $x3556 (<= (+ A_2 ?x291 (* (- 1.0) S_2) ?x250 ?x224) 0.0) (or $x2042 (not $x3536)) (<= (+ A_2 (* (- 2.0) C) (* (- 1.0) S_1) ?x250 ?x224) 0.0) (<= (+ A_2 ?x1574 ?x1018 ?x250 ?x224) 0.0) $x3779 (or $x488 $x455) (<= (+ ?x1044 ?x291 S_1 L_0) 0.0) (<= (+ (* (- 2.0) C) S_1 ?x1018) 0.0) (<= (+ ?x1574 S_2 ?x1018) 0.0) $x3584 $x3587 $x619 $x789 $x34 (<= (+ S_4 ?x368 L_4) 0.0) (<= (+ (* (- 1.0) A_2) S_2 L_2) 0.0) (<= (+ L_2 (* (- 1.0) A_3) S_3) 0.0) (<= (+ A_3 (* (- 1.0) A_2) ?x291) 0.0) (<= (+ ?x1044 S_0 L_0) 0.0) $x3577 (<= (+ ?x1044 (* (- 2.0) C) S_2 L_0) 0.0) (<= (+ (* (- 1.0) A_1) ?x291 S_2 L_1) 0.0) (<= (+ (* (- 1.0) A_1) L_1 S_1) 0.0) $x3602 $x3605 (<= (+ (* (- 2.0) C) S_2 (* (- 1.0) S_1)) 0.0)))))))))))))))))))))))))))))))))))))))))))
(check-sat)

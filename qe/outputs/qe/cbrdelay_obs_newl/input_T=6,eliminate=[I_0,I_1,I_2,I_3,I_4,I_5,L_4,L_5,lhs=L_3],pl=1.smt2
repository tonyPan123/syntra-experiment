; benchmark generated from python API
(set-info :status unknown)
(declare-fun S_5 () Real)
(declare-fun L_2 () Real)
(declare-fun A_2 () Real)
(declare-fun S_4 () Real)
(declare-fun L_0 () Real)
(declare-fun A_0 () Real)
(declare-fun L_1 () Real)
(declare-fun A_1 () Real)
(declare-fun A_4 () Real)
(declare-fun A_5 () Real)
(declare-fun A_3 () Real)
(declare-fun S_3 () Real)
(declare-fun S_2 () Real)
(declare-fun S_1 () Real)
(declare-fun S_0 () Real)
(declare-fun C () Real)
(declare-fun L_3 () Real)
(declare-fun B () Real)
(declare-fun a () Real)
(assert
 (exists ((I_0 Real) (I_1 Real) (I_2 Real) (I_3 Real) (I_4 Real) (I_5 Real) (L_4 Real) (L_5 Real) )(let ((?x105 (- A_2 L_2)))
 (let (($x149 (<= ?x105 S_5)))
 (let ((?x40 (- A_0 L_0)))
 (let (($x148 (<= ?x40 S_4)))
 (let ((?x100 (- A_1 L_1)))
 (let (($x147 (> ?x100 S_4)))
 (let (($x146 (>= A_5 A_4)))
 (let (($x145 (>= A_4 A_3)))
 (let (($x144 (>= A_3 A_2)))
 (let (($x143 (>= A_2 A_1)))
 (let (($x142 (>= A_1 A_0)))
 (let (($x140 (>= S_5 S_4)))
 (let (($x137 (>= S_4 S_3)))
 (let (($x134 (>= S_3 S_2)))
 (let (($x131 (>= S_2 S_1)))
 (let (($x128 (>= S_1 S_0)))
 (let ((?x172 (- A_5 L_5)))
 (let ((?x98 (* C 1.0)))
 (let ((?x173 (+ I_4 ?x98)))
 (let (($x181 (= I_4 (ite (< (+ I_3 ?x98) (- A_4 L_4)) (+ I_3 ?x98) (- A_4 L_4)))))
 (let ((?x110 (- A_3 L_3)))
 (let ((?x182 (+ I_2 ?x98)))
 (let (($x194 (= L_5 L_4)))
 (let (($x199 (=> (not (> (- (- A_5 L_4) I_5) B)) $x194)))
 (let (($x197 (> (- (- A_5 L_4) I_5) B)))
 (let (($x203 (=> $x197 (= L_5 (- (- A_5 I_5) B)))))
 (let (($x204 (= L_4 L_3)))
 (let (($x208 (=> (not (> (- (- A_4 L_3) I_4) B)) $x204)))
 (let (($x206 (> (- (- A_4 L_3) I_4) B)))
 (let (($x212 (=> $x206 (= L_4 (- (- A_4 I_4) B)))))
 (let (($x76 (= L_3 L_2)))
 (let (($x216 (=> (not (> (- (- A_3 L_2) I_3) B)) $x76)))
 (let (($x214 (> (- (- A_3 L_2) I_3) B)))
 (let (($x220 (=> $x214 (= L_3 (- (- A_3 I_3) B)))))
 (let (($x66 (= L_2 L_1)))
 (let (($x224 (=> (not (> (- (- A_2 L_1) I_2) B)) $x66)))
 (let (($x222 (> (- (- A_2 L_1) I_2) B)))
 (let (($x228 (=> $x222 (= L_2 (- (- A_2 I_2) B)))))
 (let (($x56 (= L_1 L_0)))
 (let (($x232 (=> (not (> (- (- A_1 L_0) I_1) B)) $x56)))
 (let (($x230 (> (- (- A_1 L_0) I_1) B)))
 (let (($x236 (=> $x230 (= L_1 (- (- A_1 I_1) B)))))
 (let (($x47 (= a 1.0)))
 (let ((?x43 (* 5.0 a)))
 (let (($x45 (>= B ?x43)))
 (let (($x44 (>= C ?x43)))
 (let (($x39 (>= L_0 0.0)))
 (and $x39 (<= I_0 ?x40) $x44 $x45 $x47 $x236 $x232 $x228 $x224 $x220 $x216 $x212 $x208 $x203 $x199 $x236 $x232 $x228 $x224 $x220 $x216 $x212 $x208 $x203 $x199 (= I_1 (ite (< (+ I_0 ?x98) ?x100) (+ I_0 ?x98) ?x100)) (= I_2 (ite (< (+ I_1 ?x98) ?x105) (+ I_1 ?x98) ?x105)) (= I_3 (ite (< ?x182 ?x110) ?x182 ?x110)) $x181 (= I_5 (ite (< ?x173 ?x172) ?x173 ?x172)) (>= S_0 (- I_0 ?x98)) (<= S_0 I_0) (>= S_1 I_0) $x128 (<= S_1 I_1) (>= S_2 I_1) $x131 (<= S_2 I_2) (>= S_3 I_2) $x134 (<= S_3 I_3) (>= S_4 I_3) $x137 (<= S_4 I_4) (>= S_5 I_4) $x140 (<= S_5 I_5) $x142 $x143 $x144 $x145 $x146 $x147 $x148 $x149)))))))))))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)

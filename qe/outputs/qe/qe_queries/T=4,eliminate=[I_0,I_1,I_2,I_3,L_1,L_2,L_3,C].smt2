; benchmark generated from python API
(set-info :status unknown)
(declare-fun A_1 () Real)
(declare-fun B () Real)
(declare-fun A_2 () Real)
(declare-fun S_2 () Real)
(declare-fun A_3 () Real)
(declare-fun S_3 () Real)
(declare-fun S_1 () Real)
(declare-fun A_0 () Real)
(declare-fun L_0 () Real)
(declare-fun S_0 () Real)
(assert
 (let (($x2494 (<= (+ S_3 (* (- 1.0) A_3) (* (- 1.0) S_2) (* (- 1.0) B) A_1) 0.0)))
 (let (($x1500 (<= (+ (* (- 1.0) A_2) S_2 (* (- 1.0) S_1) (* (- 1.0) B) A_0) 0.0)))
 (let (($x1276 (<= (+ S_3 (* (- 1.0) A_3) (* (- 1.0) S_1) (* (- 1.0) B) A_0) 0.0)))
 (let (($x938 (>= B 0.0)))
 (let (($x5236 (<= (+ (* (- 1.0) A_2) S_3 A_0 (* (- 1.0) S_2)) 0.0)))
 (let (($x1363 (<= (+ A_1 (* (- 1.0) A_2)) 0.0)))
 (let ((?x2107 (* (/ 1.0 2.0) A_2)))
 (let ((?x2009 (* (- (/ 1.0 2.0)) B)))
 (let ((?x902 (* (- 1.0) S_2)))
 (let ((?x1617 (* (- (/ 1.0 2.0)) A_3)))
 (let ((?x2048 (* (- (/ 1.0 2.0)) L_0)))
 (let ((?x1777 (* (/ 1.0 2.0) S_3)))
 (let ((?x2032 (* (/ 1.0 2.0) A_0)))
 (let (($x2108 (<= (+ ?x2032 ?x1777 ?x2048 ?x1617 ?x902 ?x2009 ?x2107) 0.0)))
 (let (($x1260 (<= (+ A_1 S_3 (* (- 1.0) A_3) ?x902) 0.0)))
 (let (($x3350 (= B 0.0)))
 (let (($x1586 (<= (+ A_1 ?x902 S_0 B (* (- 1.0) A_0)) 0.0)))
 (let (($x1568 (<= (+ A_1 ?x902 (* (- 1.0) L_0)) 0.0)))
 (let (($x904 (<= (+ (* (/ 2.0 3.0) A_0) (* (/ 1.0 3.0) S_3) (* (- (/ 2.0 3.0)) L_0) ?x902) 0.0)))
 (let (($x8973 (or (not (<= (+ S_0 L_0 B (* (- 1.0) A_0)) 0.0)) $x1586 $x3350 $x5236)))
 (let ((?x563 (* (- 1.0) B)))
 (let ((?x532 (* (- 1.0) L_0)))
 (let ((?x1098 (* (- 2.0) S_2)))
 (let ((?x643 (* (- 1.0) A_2)))
 (let (($x5238 (<= (+ ?x643 S_3 A_0 ?x1098 ?x532 ?x563 A_1) 0.0)))
 (let (($x5229 (<= (+ ?x643 S_3 (* 2.0 A_0) ?x902 ?x532 (* (- 1.0) S_1) ?x563) 0.0)))
 (let (($x8852 (or (<= (+ A_0 ?x532 (* (- 1.0) S_1) ?x563) 0.0) $x1586 $x3350 $x5229)))
 (let (($x2604 (<= (+ (* (- (/ 1.0 2.0)) A_0) (* (- (/ 1.0 2.0)) S_3) (* (/ 1.0 2.0) L_0) S_1) 0.0)))
 (let (($x1758 (<= (+ A_2 (* (- 1.0) S_3) ?x532) 0.0)))
 (let (($x7589 (or (<= (+ A_2 (* (- 1.0) S_3) S_0 B (* (- 1.0) A_0)) 0.0) $x1758 (<= (+ A_2 (* (- 1.0) S_3) S_1 B (* (- 1.0) A_1)) 0.0) $x2604 $x3350)))
 (let (($x7057 (or $x2604 (<= (+ A_2 (* (- 1.0) S_3) S_1 (* (- 1.0) A_1)) 0.0) $x3350)))
 (let ((?x552 (* (- 1.0) A_0)))
 (let ((?x2475 (+ ?x552 S_3 L_0 (* (- 2.0) A_3) (* (- 2.0) B) (* 2.0 A_1))))
 (let (($x1253 (<= (+ (* (- 1.0) A_3) A_2) 0.0)))
 (and (or $x1253 $x2604) (or $x1253 (<= ?x2475 0.0)) $x7057 $x7589 (or $x1260 $x5236) (or $x1568 (<= (+ S_0 L_0 B ?x552) 0.0) $x5236) (or $x1260 $x5238) (or $x1363 $x5229) (or $x1260 $x5229) $x8852 (or $x1586 (<= (+ ?x532 ?x902 ?x563 A_1) 0.0) $x3350 $x5238) (or $x1363 $x5238) (or $x904 $x1260) (or $x904 $x1363) $x8973 (or $x904 $x1568 $x1586 $x3350) (or $x1568 $x1586 $x2108 $x3350) (or $x1260 $x2108) (or $x1363 $x5236) $x938 (<= (+ (* (- 1.0) S_1) S_0) 0.0) (<= (+ (* (- 1.0) S_3) S_2) 0.0) $x1276 (<= (+ S_3 (* (- 1.0) A_3) L_0) 0.0) (<= (+ (* (- 1.0) A_3) ?x563 A_2) 0.0) (<= (+ ?x643 S_2 L_0) 0.0) (<= (+ (* (- 1.0) A_1) S_1 L_0) 0.0) (<= (+ S_0 L_0 ?x552) 0.0) (<= (+ (* (- 1.0) A_1) ?x563 A_0) 0.0) $x1500 (<= (+ ?x902 S_1) 0.0) $x2494 (<= (+ ?x643 ?x563 A_1) 0.0)))))))))))))))))))))))))))))))))))))
(check-sat)

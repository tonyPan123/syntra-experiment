; benchmark generated from python API
(set-info :status unknown)
(declare-fun S_2 () Real)
(declare-fun L_1 () Real)
(declare-fun A_1 () Real)
(declare-fun C () Real)
(declare-fun S_0 () Real)
(declare-fun S_1 () Real)
(declare-fun L_2 () Real)
(declare-fun A_2 () Real)
(declare-fun S_3 () Real)
(declare-fun A_3 () Real)
(declare-fun L_0 () Real)
(declare-fun A_0 () Real)
(declare-fun L0 () Real)
(declare-fun A_4 () Real)
(declare-fun S_4 () Real)
(assert
 (let (($x37 (>= L0 0.0)))
 (let (($x688 (>= C 5.0)))
 (let (($x986 (not (<= 0.0 (+ L_1 (* (- 1.0) L_2))))))
 (let (($x54 (= L_1 L_0)))
 (let (($x7935 (or $x54 $x986 (<= (+ (* (- 2.0) C) (* (- 1.0) A_1) A_3) (- 5.0)))))
 (let (($x7910 (or $x54 (<= (+ (* (- 1.0) C) (* (- 1.0) A_1) L_1 S_2) (- 5.0)))))
 (let (($x5712 (<= (+ (* (- 2.0) C) (* (- 1.0) L_2) A_3 (* (- 1.0) S_2)) 0.0)))
 (let (($x5753 (<= (+ (* (- 3.0) C) (* (- 1.0) L_2) A_3 (* (- 1.0) S_1)) 0.0)))
 (let (($x5718 (<= (+ (* (- 4.0) C) (* (- 1.0) L_2) A_3 (* (- 1.0) S_0)) 0.0)))
 (let (($x6010 (<= (+ (* (- 2.0) C) (* (- 1.0) L_2) (* (- 1.0) A_1) L_0 A_3) 0.0)))
 (let (($x370 (<= 0.0 (+ L_1 (* (- 1.0) A_1) C S_0))))
 (let (($x64 (= L_2 L_1)))
 (let (($x6020 (or $x64 $x370 (<= (+ L_2 (* (- 1.0) A_2) (* 2.0 C) S_0) (- 5.0)))))
 (let (($x777 (= L_2 L_0)))
 (let (($x7966 (or (not (<= 0.0 (+ L_0 (* (- 1.0) A_1) C S_0))) $x777 (<= (+ C (* (- 1.0) A_2) L_2 A_1 (* (- 1.0) L_0)) (- 5.0)))))
 (let (($x7860 (or (not $x370) (<= (+ (* (- 1.0) L_0) A_1 (* (- 1.0) S_2)) 0.0))))
 (let (($x220 (<= (+ C (* (- 1.0) S_2) S_0) 0.0)))
 (let (($x1247 (not (= L_0 L_1))))
 (let (($x458 (<= 0.0 (+ (* (- 1.0) A_1) (* (- 1.0) L_2) A_2 (* (- 1.0) C) L_0))))
 (let (($x1275 (not (= L_1 L_2))))
 (let (($x5734 (or $x54 $x1275 (<= (+ (* (- 1.0) C) (* (- 1.0) A_1) A_2) 0.0))))
 (let (($x5724 (<= (+ (* (- 3.0) C) (* (- 1.0) L_2) A_3 (* (- 1.0) A_0) L_0) 0.0)))
 (let (($x5428 (or $x54 $x64 (= (+ (* (- 1.0) L_1) A_1 L_2 (* (- 1.0) A_2) C) 0.0))))
 (let (($x36 (>= L_0 L0)))
 (let (($x111 (>= S_1 S_0)))
 (let (($x114 (>= S_2 S_1)))
 (let (($x120 (>= S_4 S_3)))
 (let (($x122 (>= A_1 A_0)))
 (let (($x123 (>= A_2 A_1)))
 (let (($x124 (>= A_3 A_2)))
 (and (<= (+ A_3 (* (- 1.0) L_2)) S_3) $x124 $x123 $x122 $x120 $x114 $x111 $x36 (<= (+ L_2 (* (- 1.0) C) (* (- 1.0) A_3) S_4) 0.0) (or $x64 $x986) $x5428 (or $x64 (<= (+ C (* (- 1.0) A_2) L_2 S_1) (- 5.0))) (<= (+ L_0 (* (- 1.0) A_1) S_1) 0.0) (or (not $x458) $x54) (<= (+ (* (- 1.0) A_3) L_0 S_3) 0.0) (<= (+ (* (- 1.0) C) S_1 (* (- 1.0) A_0) L_0) 0.0) (or $x54 $x220) (or $x64 (<= (+ (* (- 1.0) C) (* (- 1.0) A_2) A_3) (- 5.0))) $x5724 (or $x64 (<= (+ (* (- 1.0) A_2) L_2 S_2) (- 5.0))) $x5734 (<= (+ L_2 S_4 (* (- 1.0) A_4)) 0.0) (<= (+ (* (- 2.0) C) (* (- 1.0) S_1) S_2) 0.0) (or $x458 $x777 $x1247) (<= (+ (* (- 2.0) C) S_2 (* (- 1.0) A_0) L_0) 0.0) (<= (+ (* (- 1.0) C) A_3 (* (- 1.0) A_2)) 0.0) (<= (+ (* (- 3.0) C) S_2 (* (- 1.0) S_0)) 0.0) (or $x54 (<= (+ (* (- 1.0) A_1) L_1 S_1) (- 5.0))) (or $x54 (<= (+ C (* (- 1.0) A_1) L_1 S_0) (- 5.0))) (or $x220 (<= 0.0 (+ C (* (- 1.0) A_1) L_0 S_0))) $x7860 $x7966 $x6020 $x6010 $x5718 $x5753 $x5712 $x7910 $x7935 $x688 $x37 (<= (+ (* (- 1.0) A_0) S_0 L_0) 0.0) (<= (+ L_2 (* (- 1.0) A_3) S_3) 0.0) (<= (+ (* (- 1.0) A_2) L_2 S_2) 0.0) (<= (+ (* (- 2.0) C) S_1 (* (- 1.0) S_0)) 0.0) (<= (+ (* (- 1.0) C) (* (- 1.0) A_1) L_1 S_2) 0.0)))))))))))))))))))))))))))))))))
(check-sat)
